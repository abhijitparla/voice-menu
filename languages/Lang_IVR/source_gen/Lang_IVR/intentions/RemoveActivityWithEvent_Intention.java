package Lang_IVR.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.AbstractIntentionDescriptor;
import jetbrains.mps.openapi.intentions.IntentionFactory;
import java.util.Collection;
import jetbrains.mps.openapi.intentions.IntentionExecutable;
import jetbrains.mps.openapi.intentions.Kind;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.Collections;
import jetbrains.mps.intentions.AbstractIntentionExecutable;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import java.util.Objects;
import jetbrains.mps.openapi.intentions.IntentionDescriptor;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SReferenceLink;

public final class RemoveActivityWithEvent_Intention extends AbstractIntentionDescriptor implements IntentionFactory {
  private Collection<IntentionExecutable> myCachedExecutable;
  public RemoveActivityWithEvent_Intention() {
    super(Kind.NORMAL, false, new SNodePointer("r:77154912-b471-49c1-aa28-d892b2d8f4fe(Lang_IVR.intentions)", "5886352086539970985"));
  }
  @Override
  public String getPresentation() {
    return "RemoveActivityWithEvent";
  }
  @Override
  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }
  private boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), CONCEPTS.MenuList$_b);
  }
  @Override
  public boolean isSurroundWith() {
    return false;
  }
  public Collection<IntentionExecutable> instances(final SNode node, final EditorContext context) {
    if (myCachedExecutable == null) {
      myCachedExecutable = Collections.<IntentionExecutable>singletonList(new IntentionImplementation());
    }
    return myCachedExecutable;
  }
  /*package*/ final class IntentionImplementation extends AbstractIntentionExecutable {
    public IntentionImplementation() {
    }
    @Override
    public String getDescription(final SNode node, final EditorContext editorContext) {
      return "Remove Activity and Its Event";
    }
    @Override
    public void execute(final SNode node, final EditorContext editorContext) {
      SNodeOperations.deleteNode(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(SNodeOperations.getParent(node), CONCEPTS.MenuList$_b), LINKS.Label$YmBT)).findFirst(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return Objects.equals(it, SLinkOperations.getTarget(node, LINKS.Dial_Label$YlIg));
        }
      }));
      SNodeOperations.deleteNode(node);
    }
    @Override
    public IntentionDescriptor getDescriptor() {
      return RemoveActivityWithEvent_Intention.this;
    }
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept MenuList$_b = MetaAdapterFactory.getConcept(0x124f7f4fc7fa46ceL, 0x85780272621cca38L, 0x4c2e6accfaf690deL, "Lang_IVR.structure.MenuList");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink Label$YmBT = MetaAdapterFactory.getContainmentLink(0x124f7f4fc7fa46ceL, 0x85780272621cca38L, 0x4c2e6accfaf690deL, 0x4c2e6accfaf690dfL, "Label");
    /*package*/ static final SReferenceLink Dial_Label$YlIg = MetaAdapterFactory.getReferenceLink(0x124f7f4fc7fa46ceL, 0x85780272621cca38L, 0x4c2e6accfaf690d9L, 0x4c2e6accfaf690dcL, "Dial_Label");
  }
}
