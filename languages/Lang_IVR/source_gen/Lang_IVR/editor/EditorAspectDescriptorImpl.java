package Lang_IVR.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.TransformationMenu;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new AddNewCategory_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new Back_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new IncludeActivities_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new MenuList_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }


  @NotNull
  @Override
  public Collection<TransformationMenu> getDeclaredDefaultTransformationMenus(SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex1.index(cncpt)) {
      case 0:
        return Collections.<TransformationMenu>singletonList(new AddNewCategory_TransformationMenu());
      case 1:
        return Collections.<TransformationMenu>singletonList(new Back_TransformationMenu());
      case 2:
        return Collections.<TransformationMenu>singletonList(new Command_TransformationMenu());
      case 3:
        return Collections.<TransformationMenu>singletonList(new DialPadTemplate_TransformationMenu());
      case 4:
        return Collections.<TransformationMenu>singletonList(new IncludeActivities_TransformationMenu());
      default:
    }
    return Collections.<TransformationMenu>emptyList();
  }

  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x124f7f4fc7fa46ceL, 0x85780272621cca38L, 0x4c2e6accfaf690d6L), MetaIdFactory.conceptId(0x124f7f4fc7fa46ceL, 0x85780272621cca38L, 0x4c2e6accfaf7f7b3L), MetaIdFactory.conceptId(0x124f7f4fc7fa46ceL, 0x85780272621cca38L, 0x4c2e6accfaf690d9L), MetaIdFactory.conceptId(0x124f7f4fc7fa46ceL, 0x85780272621cca38L, 0x4c2e6accfaf690deL)).seal();
  private static final ConceptSwitchIndex conceptIndex1 = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x124f7f4fc7fa46ceL, 0x85780272621cca38L, 0x4c2e6accfaf690d6L), MetaIdFactory.conceptId(0x124f7f4fc7fa46ceL, 0x85780272621cca38L, 0x4c2e6accfaf7f7b3L), MetaIdFactory.conceptId(0x124f7f4fc7fa46ceL, 0x85780272621cca38L, 0x4c2e6accfaf7f815L), MetaIdFactory.conceptId(0x124f7f4fc7fa46ceL, 0x85780272621cca38L, 0x4c2e6accfaf690d3L), MetaIdFactory.conceptId(0x124f7f4fc7fa46ceL, 0x85780272621cca38L, 0x4c2e6accfaf690d9L)).seal();
}
